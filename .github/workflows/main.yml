name: Build Installers

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.9'

    - name: Install dependencies
      run: flutter pub get

    - name: Build Windows installer
      if: matrix.os == 'windows'
      run: flutter build windows

    - name: Package installers
      if: matrix.os == 'windows'
      run: |
        mkdir MyAppInstaller
        xcopy /E /Y build\windows\Runner\Release MyAppInstaller
        7z a MyAppInstaller.zip MyAppInstaller

    - name: Upload installers
      uses: actions/upload-artifact@v2
      with:
        name: windows-installer
        path: ${{ github.workspace }}/MyAppInstaller.zip

    - name: Send Telegram message
      if: always()
      run: |
        $token = ${{ secrets.BOTTOKEN }}
        $chat_id = ${{ secrets.MESSAGEID }}
        $file = "${{ github.workspace }}/MyAppInstaller.zip"
        $message = "New Windows installer available for download!\n\nProject: Flutter - Application\nCommit Message: ${{ github.event.head_commit.message }}\nCommitted Actor: ${{ github.actor }}"
        $url = "https://api.telegram.org/bot$token/sendDocument"
        $curl_command = "curl.exe -F 'chat_id=$chat_id' -F 'caption=$message' -F 'document=@$file' $url"
        Invoke-Expression -Command $curl_command

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v1
      if: always()
      with:
        name: windows-installer
        failOnError: false

    strategy:
      matrix:
        os: ['windows']
